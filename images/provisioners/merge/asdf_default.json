{
  "builders": [],
  "provisioners": [
    {
      "type": "file",
      "source": "./configs",
      "destination": "/tmp/configs"
    },
    {
      "execute_command": "chmod +x {{ .Path }}; {{ .Vars }} sudo -E sh '{{ .Path }}'",
      "inline": [
        "echo 'Waiting for cloud-init to finish, this can take a few minutes please be patient...'",
        "/usr/bin/cloud-init status --wait",
        "fallocate -l 2G /swap && chmod 600 /swap && mkswap /swap && swapon /swap",
        "echo '/swap none swap sw 0 0' | sudo tee -a /etc/fstab",
        "echo 'Running dist-uprade'",
        "sudo apt update -qq",
        "DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confnew dist-upgrade -qq",
        "ufw allow 22",
        "ufw allow 2266",
        "ufw --force enable",
        "echo 'Creating OP user'",
        "useradd -G sudo -s /usr/bin/zsh -m op",
        "rm -rf /etc/update-motd.d/*",
        "/bin/su -l op -c 'wget -q https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O - | sh'",
        "chown -R op:users /home/op",
        "touch /home/op/.sudo_as_admin_successful",
        "touch /home/op/.cache/motd.legal-displayed",
        "chown -R op:users /home/op",
        "echo 'op:{{ user `op_random_password` }}' | chpasswd",
        "echo 'ubuntu:{{ user `op_random_password` }}' | chpasswd",
        "echo 'root:{{ user `op_random_password` }}' | chpasswd",
        "echo 'Moving Config files'",
        "mv /tmp/configs/sudoers /etc/sudoers",
        "pkexec chown root:root /etc/sudoers /etc/sudoers.d -R",
        "mv /tmp/configs/bashrc /home/op/.bashrc",
        "mv /tmp/configs/zshrc /home/op/.zshrc",
        "mv /tmp/configs/sshd_config /etc/ssh/sshd_config",
        "mv /tmp/configs/00-header /etc/update-motd.d/00-header",
        "mv /tmp/configs/authorized_keys /home/op/.ssh/authorized_keys",
        "mv /tmp/configs/config.ini /home/op/.config/amass/config.ini",
        "mv /tmp/configs/tmux-splash.sh /home/op/bin/tmux-splash.sh",
        "/bin/su -l op -c 'sudo chmod 600 /home/op/.ssh/authorized_keys'",
        "chown -R op:users /home/op",
        "sudo service sshd restart",
        "chmod +x /etc/update-motd.d/00-header",
        "echo 'Installing Golang 1.20.4'",
        "echo 'Installing Docker'",
        "curl -fsSL https://get.docker.com -o get-docker.sh && sh get-docker.sh && rm get-docker.sh",
        "sudo usermod -aG docker op",
        "echo 'Installing Interlace'",
        "echo 'Optimizing SSH Connections'",
        "/bin/su -l root -c 'echo \"ClientAliveInterval 60\" | sudo tee -a /etc/ssh/sshd_config'",
        "/bin/su -l root -c 'echo \"ClientAliveCountMax 60\" | sudo tee -a /etc/ssh/sshd_config'",
        "/bin/su -l root -c 'echo \"MaxSessions 100\" | sudo tee -a /etc/ssh/sshd_config'",
        "/bin/su -l root -c 'echo \"net.ipv4.netfilter.ip_conntrack_max = 1048576\" | sudo tee -a /etc/sysctl.conf'",
        "/bin/su -l root -c 'echo \"net.nf_conntrack_max = 1048576\" | sudo tee -a /etc/sysctl.conf'",
        "/bin/su -l root -c 'echo \"net.core.somaxconn = 1048576\" | sudo tee -a /etc/sysctl.conf'",
        "/bin/su -l root -c 'echo \"net.ipv4.ip_local_port_range = 1024 65535\" | sudo tee -a /etc/sysctl.conf'",
        "/bin/su -l root -c 'echo \"1024 65535\" | sudo tee -a /proc/sys/net/ipv4/ip_local_port_range'",
        "echo 'Downloading Wordlists'",
        "echo 'Downloading cent'",
        "git clone https://github.com/xm1k3/cent.git /home/op/lists/cent",
        "echo 'Downloading leaky-paths'",
        "git clone https://github.com/ayoubfathi/leaky-paths.git /home/op/lists/leaky-paths",
        "echo 'Downloading axiom-dockerfiles'",
        "git clone https://github.com/0xtavian/minimal-pentesting-dockerfiles.git /home/op/lists/axiom-dockerfiles",
        "echo 'Downloading permutations'",
        "wget -q -O /home/op/lists/permutations.txt https://gist.github.com/six2dez/ffc2b14d283e8f8eff6ac83e20a3c4b4/raw",
        "echo 'Downloading resolvers'",
        "wget -q -O /home/op/lists/resolvers.txt https://raw.githubusercontent.com/trickest/resolvers/main/resolvers.txt",
        "echo 'Downloading SecLists'",
        "git clone https://github.com/danielmiessler/SecLists.git /home/op/lists/seclists",
        "echo 'Installing Tools'",
        "echo 'Installing aiodnsbrute'",
        "git clone https://github.com/blark/aiodnsbrute.git /home/op/recon/aiodnsbrute",
        "echo 'Installing anew'",
        "echo 'Installing anti-burl'",
        "/bin/su -l op -c 'docker image build - < /home/op/lists/axiom-dockerfiles/anti-burl/Dockerfile -t axiom/anti-burl'",
        "echo 'Installing assetfinder'",
        "/bin/su -l op -c 'docker image build - < /home/op/lists/axiom-dockerfiles/assetfinder/Dockerfile -t axiom/assetfinder'",
        "echo 'Installing Amass'",
        "wget -q -O /tmp/amass.zip https://github.com/OWASP/Amass/releases/download/v3.21.2/amass_linux_amd64.zip && cd /tmp/ && unzip /tmp/amass.zip && mv /tmp/amass_linux_amd64/amass /usr/bin/amass",
        "echo 'Installing aquatone'",
        "wget -q -O /tmp/aquatone.zip https://github.com/michenriksen/aquatone/releases/download/v1.7.0/aquatone_linux_amd64_1.7.0.zip && cd /tmp/ && unzip /tmp/aquatone.zip && mv /tmp/aquatone /usr/bin/aquatone",
        "echo 'Installing Arjun'",
        "echo 'Installing axiom'",
        "/bin/su -l op -c 'git clone https://github.com/pry0cc/axiom.git /home/op/.axiom && cd /home/op/.axiom/interact && ./axiom-configure --shell zsh --unattended'",
        "echo 'Installing cero'",
        "/bin/su -l op -c 'docker image build - < /home/op/lists/axiom-dockerfiles/cero/Dockerfile -t axiom/cero'",
        "echo 'Installing chaos-client'",
        "echo 'Installing commix'",
        "/bin/su -l op -c 'docker image build - < /home/op/lists/axiom-dockerfiles/commix/Dockerfile -t axiom/commix'",
        "echo 'Installing concurl'",
        "echo 'Installing Corsy'",
        "/bin/su -l op -c 'docker image build - < /home/op/lists/axiom-dockerfiles/corsy/Dockerfile -t axiom/corsy'",
        "echo 'Installing CrackMapExec'",
        "wget -q -O /tmp/cme-ubuntu-latest.zip https://github.com/byt3bl33d3r/CrackMapExec/releases/download/v5.1.7dev/cme-ubuntu-latest.zip && unzip /tmp/cme-ubuntu-latest.zip -d /home/op/recon/ && chmod +x /home/op/recon/cme",
        "echo 'Installing crlfuzz'",
        "echo 'Installing dalfox'",
        "echo 'Installing dirdar'",
        "echo 'Installing DNSCewl'",
        "echo 'Installing dnsgen'",
        "/bin/su -l op -c 'docker image build - < /home/op/lists/axiom-dockerfiles/dnsgen/Dockerfile -t axiom/dnsgen'",
        "echo 'Installing dnsrecon'",
        "/bin/su -l op -c 'docker image build - < /home/op/lists/axiom-dockerfiles/dnsrecon/Dockerfile -t axiom/dnsrecon'",
        "echo 'Installing dnsvalidator'",
        "echo 'Installing dnsx'",
        "echo 'Installing ERLPopper'",
        "git clone https://github.com/maikthulhu/ERLPopper.git /home/op/recon/ERLPopper",
        "echo 'Installing exclude-cdn'",
        "echo 'Installing feroxbuster'",
        "/bin/su -l root -c 'curl -sL https://raw.githubusercontent.com/epi052/feroxbuster/master/install-nix.sh | bash && mv feroxbuster /usr/bin/'",
        "echo 'Installing fff'",
        "echo 'Installing ffuf'",
        "echo 'Installing findomain-linux'",
        "wget -q -O /tmp/findomain.zip https://github.com/Edu4rdSHL/findomain/releases/latest/download/findomain-linux.zip && unzip /tmp/findomain.zip -d /usr/bin/ && chmod +x /usr/bin/findomain && rm /tmp/findomain.zip",
        "echo 'Installing gau'",
        "echo 'Installing gauplus'",
        "echo 'Installing getJS'",
        "echo 'Installing gf'",
        "echo 'Installing Gf-Patterns'",
        "git clone https://github.com/1ndianl33t/Gf-Patterns /home/op/.gf",
        "echo 'Installing github-subdomains'",
        "echo 'Installing github-endpoints'",
        "echo 'Installing gron'",
        "echo 'Installing Gxss'",
        "echo 'Installing hakrawler'",
        "echo 'Installing hakrevdns'",
        "echo 'Installing httprobe'",
        "echo 'Installing httpx'",
        "echo 'Installing interactsh-client'",
        "echo 'Installing ipcdn'",
        "/bin/su -l op -c 'docker image build - < /home/op/lists/axiom-dockerfiles/ipcdn/Dockerfile -t axiom/ipcdn'",
        "echo 'Installing jaeles'",
        "echo 'Installing katana'",
        "echo 'Installing kiterunner'",
        "/bin/su -l root -c 'wget -q https://github.com/assetnote/kiterunner/releases/download/v1.0.2/kiterunner_1.0.2_linux_amd64.tar.gz ; tar -zxvf kiterunner_1.0.2_linux_amd64.tar.gz ; rm kiterunner_1.0.2_linux_amd64.tar.gz ; mv kr /usr/bin/'",
        "echo 'Installing kxss'",
        "echo 'Installing LinkFinder'",
        "/bin/su -l op -c 'docker image build - < /home/op/lists/axiom-dockerfiles/linkfinder/Dockerfile -t axiom/linkfinder'",
        "echo 'Installing masscan'",
        "apt install masscan -y -qq",
        "echo 'Installing massdns'",
        "git clone https://github.com/blechschmidt/massdns.git /tmp/massdns; cd /tmp/massdns; make -s; sudo mv bin/massdns /usr/bin/massdns",
        "echo 'Installing medusa'",
        "apt install medusa -y -qq",
        "echo 'Installing meg'",
        "echo 'Installing naabu'",
        "echo 'Installing nmap'",
        "sudo apt-get -qy --no-install-recommends install build-essential libssl-dev flex bison",
        "/bin/su -l op -c 'wget https://nmap.org/dist/nmap-7.92.tgz -O /home/op/recon/nmap.tar.gz && cd /home/op/recon/ && tar zxf nmap.tar.gz --transform s/nmap-7.92/nmap/ && rm nmap.tar.gz && cd /home/op/recon/nmap/ && sudo ./configure --without-ndiff --without-zenmap --without-nping  --without-ncat --without-nmap-update --with-libpcap=included && sudo make && sudo make install'",
        "echo 'Installing nuclei'",
        "echo 'Installing OpenRedireX'",
        "/bin/su -l op -c 'docker image build - < /home/op/lists/axiom-dockerfiles/openredirex/Dockerfile -t axiom/openredirex'",
        "echo 'Installing ParamSpider'",
        "/bin/su -l op -c 'git clone https://github.com/devanshbatham/ParamSpider.git /home/op/recon/ParamSpider && cd /home/op/recon/ParamSpider && pip3 install -r requirements.txt && cd'",
        "echo 'Installing proxychains-ng'",
        "git clone https://github.com/rofl0r/proxychains-ng.git && cd proxychains-ng && make -s && make install -s && cd .. && sudo rm -r proxychains-ng",
        "echo 'Installing puredns'",
        "echo 'Installing qsreplace'",
        "echo 'Installing responder'",
        "git clone https://github.com/lgandx/Responder.git /home/op/hashes/responder",
        "echo 'Installing RustScan'",
        "wget -q -O /tmp/rustscan.deb https://github.com/brandonskerritt/RustScan/releases/download/2.0.1/rustscan_2.0.1_amd64.deb && apt install /tmp/rustscan.deb -y -qq",
        "echo 'Installing s3scanner'",
        "/bin/su -l op -c 'pip3 install s3scanner'",
        "echo 'Installing scrying'",
        "wget -q -O /tmp/scrying.deb https://github.com/nccgroup/scrying/releases/download/v0.9.0-alpha.2/scrying_0.9.0-alpha.2_amd64.deb && apt install /tmp/scrying.deb -y -qq && apt install xvfb -y -qq",
        "echo 'Installing shuffledns'",
        "echo 'Installing sqlmap'",
        "git clone --depth 1 https://github.com/sqlmapproject/sqlmap.git /home/op/recon/sqlmap-dev",
        "echo 'Installing subjack'",
        "echo 'Installing subfinder'",
        "echo 'Installing subjs'",
        "echo 'Installing testssl'",
        "git clone --depth 1 https://github.com/drwetter/testssl.sh.git /home/op/recon/testssl.sh",
        "echo 'Installing thc-hydra'",
        "wget  -q -O /tmp/libgcrypt11-dev_1.5.4-3+really1.8.1-4ubuntu1.2_amd64.deb http://security.ubuntu.com/ubuntu/pool/main/libg/libgcrypt20/libgcrypt11-dev_1.5.4-3+really1.8.1-4ubuntu1.2_amd64.deb && sudo apt install -y /tmp/libgcrypt11-dev_1.5.4-3+really1.8.1-4ubuntu1.2_amd64.deb -qq && rm /tmp/libgcrypt11-dev_1.5.4-3+really1.8.1-4ubuntu1.2_amd64.deb",
        "apt-get install libssl-dev libssh-dev libidn11-dev libpcre3-dev libgtk2.0-dev libmysqlclient-dev libpq-dev libsvn-dev firebird-dev libmemcached-dev libgpg-error-dev libgcrypt20-dev -y -qq",
        "git clone https://github.com/vanhauser-thc/thc-hydra.git /home/op/recon/thc-hydra && cd /home/op/recon/thc-hydra && ./configure && make -s && make -s install && cd",
        "echo 'Installing tlsx'",
        "echo 'Installing trufflehog'",
        "/bin/su -l op -c 'docker image build - < /home/op/lists/axiom-dockerfiles/trufflehog/Dockerfile -t axiom/trufflehog'",
        "echo 'Installing unimap'",
        "wget -q -O /tmp/unimap https://github.com/Edu4rdSHL/unimap/releases/download/0.5.1/unimap-linux && mv /tmp/unimap /usr/bin/unimap && chmod +x /usr/bin/unimap",
        "echo 'Installing wafw00f'",
        "echo 'Installing waybackurls'",
        "echo 'Installing webscreenshot'",
        "/bin/su -l op -c 'pip3 install webscreenshot'",
        "echo 'Installing wpscan'",
        "gem install wpscan",
        "echo 'Removing unneeded Docker images'",
        "/bin/su -l op -c 'docker image prune -f'",
        "/bin/su -l op -c 'wget -q -O gf-completion.zsh https://raw.githubusercontent.com/tomnomnom/gf/master/gf-completion.zsh && cat gf-completion.zsh >> /home/op/.zshrc && rm gf-completion.zsh && cd'",
        "/bin/su -l root -c 'apt-get clean'",
        "echo \"The password for user op is: {{ user `op_random_password` }}\"",
        "touch /home/op/.z",
        "chown -R op:users /home/op",
        "chown root:root /etc/sudoers /etc/sudoers.d -R",
        "echo set debconf to Noninteractive",
        "echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections",
        "/usr/bin/cloud-init status --wait",
        "sudo apt-get install fail2ban ufw net-tools zsh zsh-syntax-highlighting zsh-autosuggestions jq build-essential unzip git p7zip libpcap-dev grc -y -qq",
        "useradd -G sudo -s /usr/bin/zsh -m op",
        "mv /tmp/configs/zshrc /home/op/.zshrc",
        "chown -R op:users /home/op/",
        "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y",
        "sudo -i -u op <<'EOF'",
        "export PATH=$/home/op/.asdf/bin:/home/op/.asdf/shims:$PATH",
        "asdf current",
        "wget -q https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O - | sh",
        "source /home/op/.zshrc",
        "git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.13.1",
        "/home/op/.asdf/bin/asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git",
        "/home/op/.asdf/bin/asdf install nodejs 20.6.1",
        "/home/op/.asdf/bin/asdf global nodejs 20.6.1",
        "/home/op/.asdf/bin/asdf reshim nodejs",
        "/home/op/.asdf/bin/asdf plugin add ruby https://github.com/asdf-vm/asdf-ruby.git",
        "/home/op/.asdf/bin/asdf install ruby 3.2.2",
        "/home/op/.asdf/bin/asdf global ruby 3.2.2",
        "/home/op/.asdf/bin/asdf reshim ruby",
        "/home/op/.asdf/bin/asdf plugin add python https://github.com/danhper/asdf-python.git",
        "/home/op/.asdf/bin/asdf install python 3.9.18",
        "/home/op/.asdf/bin/asdf global python 3.9.18",
        "/home/op/.asdf/bin/asdf reshim python",
        "/home/op/.asdf/bin/asdf plugin add golang https://github.com/asdf-community/asdf-golang.git",
        "/home/op/.asdf/bin/asdf install golang 1.21.1",
        "/home/op/.asdf/bin/asdf global golang 1.21.1",
        "echo '. ~/.asdf/plugins/golang/set-env.zsh' >> /home/op/.zshrc",
        "/home/op/.asdf/bin/asdf reshim golang",
        "/home/op/.asdf/bin/asdf current",
        "EOF",
        "apt-get install -y dirmngr gpg curl gawk",
        "sudo apt-get -y install autoconf patch build-essential rustc libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libgmp-dev libncurses5-dev libffi-dev libgdbm6 libgdbm-dev libdb-dev uuid-dev",
        "sudo apt update; sudo apt install -y build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev curl libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev",
        "apt install coreutils"
      ],
      "inline_shebang": "/bin/sh -x",
      "type": "shell"
    }
  ]
}